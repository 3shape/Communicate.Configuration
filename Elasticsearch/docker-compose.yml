version: '2'

services:
    es-master-1:
        image: elasticsearch:2
        restart: always
        command: elasticsearch --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=3 --node.master=true --node.data=false --cluster.name=production --node.name=es-master --network.bind_host=0.0.0.0
        networks:
        - elasticsearch-network
        environment:                                                                                                                                                                                                                                                                                        
        - reschedule=on-node-failure
        labels:
        - 'com.docker.swarm.reschedule-policies=["on-node-failure"]'

    es-data:
        image: elasticsearch:2
        command: elasticsearch --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=3 --node.master=false --node.data=true --cluster.name=production --node.name=es-data
        restart: always
        depends_on:
            - es-master
        networks:
        - elasticsearch-network

    es-client:
        image: elasticsearch:2
        ports: 
         - "9200:9200"
        command: elasticsearch --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=3 --node.master=false --node.data=false --cluster.name=production --node.name=es-client
        restart: always
        depends_on:
            - es-master
        networks:
        - elasticsearch-network

networks:
  elasticsearch-network:
    driver: overlay