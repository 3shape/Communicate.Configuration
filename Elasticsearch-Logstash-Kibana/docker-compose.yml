version: '2'

services:
    es-master:
        image: elasticsearch:2
        restart: always
        command: elasticsearch -Des.bootstrap.mlockall=true --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=1 --node.master=true --node.data=false --cluster.name=metrics --node.name=es-master --network.bind_host=0.0.0.0
        networks:
        - metrics-network
        environment:                                                                                                                                                                                                                                                                                        
            - reschedule=on-node-failure
        labels:
        - 'com.docker.swarm.reschedule-policies=["on-node-failure"]'

    es-data:
        image: elasticsearch:2
        command: elasticsearch -Des.bootstrap.mlockall=true --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=1 --node.master=false --node.data=true --cluster.name=metrics --node.name=es-data
        restart: always
        depends_on:
            - es-master
        networks:
        - metrics-network
    es-client:
        image: elasticsearch:2
        command: elasticsearch -Des.bootstrap.mlockall=true --discovery.zen.ping.multicast.enabled=false --discovery.zen.ping.unicast.hosts=es-master --discovery.zen.minimum_master_nodes=1 --node.master=false --node.data=false --cluster.name=metrics --node.name=es-client
        restart: always
        depends_on:
            - es-master
        networks:
        - metrics-network
        environment:
            bootstrap.mlockall: 'true'

    kibana:
        image: kibana
        ports: 
            - "5601:5601"
        command: kibana --elasticsearch.url=http://es-client:9200
        restart: always
        depends_on: 
            - es-client
        networks: 
        - metrics-network

    logstash:
        ports:          
            - "5044:5044"
        depends_on: 
            - es-client
        networks: 
        - metrics-network
      

networks:
  metrics-network:
